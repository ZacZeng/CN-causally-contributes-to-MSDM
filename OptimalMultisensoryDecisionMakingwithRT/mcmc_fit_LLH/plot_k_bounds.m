function plot_k_bounds
%% function to plot how k and bound parameters depend on coherence


%% settings
data_folder = 'fit_data';
data_filename = @(subj_id, model_name) ...
    [data_folder filesep model_name '_' subj_id '.mat'];
subj_ids = {'231139', '231140', '548203', '548214', '950091', '950107', '967716', ...
    'jason','eliana','kalpana'};
subj_num = length(subj_ids);
burnin = 2000;
plot_cohs = linspace(0,0.75,50);
coh_lims = [-0.02 0.77];
coh_ticks = [0 0.12 0.25 0.35 0.51 0.7];
coh_ticklabels = {'0','12','25','35','51','70'};
kvis_lims = [0 450];
kcomb_lims = [0 450];
boundvis_lims = [0 0.4];
boundcomb_lims = [0 0.4];
subj_colors = [255 0 0; 0  255 0; 0 0 255; 255 0 255; 0 255  255; ...
    255 255 0; 0 0 0; 112 219 147; 181 166 66; 95 159 159; ...
    184 115 51; 47 79 47; 153 50 205; 135 31 120; 133 94 66; ...
    84 84 84; 142 35 35; 245 204 176; 35 142 35; 205 127 50; ...
    219 219 112; 192 192 192; 82 127 118; 159 159 95; 142 35 107; ...
    47 47 79; 235 199 158; 207 181 59; 255 127 0; 219 112 219; ...
    217 217 243; 89 89 171; 140 23 23; 35 142 104; 107 66 38]*(200/255/255);


%% collect subject's data
fprintf('Collect model fit data\n');
s_data = cell(1, subj_num);
for subj_idx = 1:subj_num
    subj_id = subj_ids{subj_idx};
    % list of coherences
    d = load_condi_data(subj_id);
    cohs = d.cohs;
    c_num = length(cohs);
    s_data{subj_idx}.cohs = cohs;
    % unimodal model fits
    d = load(data_filename(subj_id,'mf_unimodal'));
    s = d.s((burnin+1):end,:);
    s_data{subj_idx}.unimodal = struct('best_llh', d.best_llh, ...
        'k_vis', d.best_p(1:c_num), 'k_vis_sd', sqrt(var(s(:,1:c_num),[],1)), ...
        'bound_vis', d.best_p((c_num+1):(2*c_num)), ...
        'bound_vis_sd', sqrt(var(d.best_p((c_num+1):(2*c_num)),[],1)));
    % optim model fits
    d = load(data_filename(subj_id,'mf_optim'));
    s = d.s((burnin+1):end,:);
    s_sd = sqrt(var(s,[],1));
    s_data{subj_idx}.optim = struct('best_llh', d.best_llh, ...
        'k_vis', d.best_p(1:c_num), 'k_vis_sd', s_sd(1:c_num), ...
        'bound_vis', d.best_p((c_num+1):(2*c_num)), ...
        'bound_vis_sd', s_sd((c_num+1):(2*c_num)), ...
        'k_vest', d.best_p(2*c_num+1), ...
        'k_comb', sqrt(d.best_p(1:c_num).^2 + d.best_p(2*c_num+1)^2), ...
        'k_comb_sd', sqrt(var(sqrt(bsxfun(@plus,s(:,1:c_num).^2,s(:,2*c_num+1))),[],1)), ...
        'bound_comb', d.best_p((2*c_num+3):(3*c_num+2)), ...
        'bound_comb_sd', s_sd((2*c_num+3):(3*c_num+2)));
    % optim_powsep model fits
    d = load(data_filename(subj_id,'mf_optim_powsep'));
    x = d.best_p;
    k_vis = x(1)*plot_cohs.^x(4)./sqrt(1+x(2)*plot_cohs.^x(5));
    s_data{subj_idx}.optim_powsep = struct('k_vis', k_vis, ...
        'bound_vis', x(3) ./ sqrt(1+x(2)*plot_cohs.^x(5)), ...
        'k_comb', sqrt(k_vis.^2+x(6)^2), ...
        'bound_comb', x(9) ./ sqrt(1+x(8)*plot_cohs.^x(10)));
    % optim_powcomb model fits
    d = load(data_filename(subj_id,'mf_optim_powcomb'));
    x = d.best_p;
    k_vis = x(1)*plot_cohs.^x(4)./sqrt(1+x(2)*plot_cohs.^x(4));
    s_data{subj_idx}.optim_powcomb = struct('k_vis', k_vis, ...
        'bound_vis', x(3)./sqrt(1+x(2)*plot_cohs.^x(4)), ...
        'k_comb', sqrt(k_vis.^2+x(5)^2), ...
        'bound_comb', x(8) ./ sqrt(1+x(7)*plot_cohs.^x(9)));
    % sepk model fits
    d = load(data_filename(subj_id,'mf_sepk'));
    s = d.s((burnin+1):end,:);
    s_sd = sqrt(var(s,[],1));
    s_data{subj_idx}.sepk = struct('best_llh', d.best_llh, ...
        'k_vis', d.best_p(1:c_num), 'k_vis_sd', s_sd(1:c_num), ...
        'bound_vis', d.best_p((c_num+1):(2*c_num)), ...
        'bound_vis_sd', s_sd((c_num+1):(2*c_num)), ...
        'k_comb', d.best_p((2*c_num+3):(3*c_num+2)), ...
        'k_comb_sd', s_sd((2*c_num+3):(3*c_num+2)), ...
        'bound_comb', d.best_p((3*c_num+3):(4*c_num+2)), ...
        'bound_comb_sd', s_sd((3*c_num+3):(4*c_num+2)));
end



%% fit unimodal and optim models
fprintf('Fitting unimodal and optim models\n');
opt = optimset('Display', 'notify', 'FunValCheck', 'on', ...
               'MaxFunEvals', 50000, 'MaxIter', 5000, ...
               'Algorithm', 'interior-point', 'TolX', 1e-20);
for subj_idx = 1:subj_num
    subj_id = subj_ids{subj_idx};
    fprintf('%s ', subj_id);
    % unimodal fits 1
    % fitted functions are
    % k_vis(c) = a c^gam / sqrt(1+b c^gam)
    % bound_vis(c) = g / sqrt(1+b c^gam)
    vis_err = @(x) ...   % x = [a gam b g]
      sum(((s_data{subj_idx}.unimodal.k_vis-...
            x(1)*s_data{subj_idx}.cohs.^x(2)./...
            sqrt(1+x(3)*s_data{subj_idx}.cohs.^x(2)))/1000).^2) + ...
      sum((s_data{subj_idx}.unimodal.bound_vis-...
           x(4)./sqrt(1+x(3)*s_data{subj_idx}.cohs.^x(2))).^2);
    x = fmincon(vis_err, [500 2 0.5 0.25], [], [], [], [], ...
        [1 0 0 0.001], [10000 100 1000 1000], [], opt);
    s_data{subj_idx}.unimodal_fit1 = struct('x',x,...
        'k_vis', x(1)*plot_cohs.^x(2)./sqrt(1+x(3)*plot_cohs.^x(2)),...
        'bound_vis', x(4)./sqrt(1+x(3)*plot_cohs.^x(2)));
    
    % unimodal fits 2
    % fitted functions are
    % k_vis(c) = a c^gam1 / sqrt(1+b c^gam2)
    % bound_vis(c) = g / sqrt(1+b c^gam2)
    vis_err = @(x) ...   % x = [a gam1 b g gam2]
      sum(((s_data{subj_idx}.unimodal.k_vis-...
            x(1)*s_data{subj_idx}.cohs.^x(2)./...
            sqrt(1+x(3)*s_data{subj_idx}.cohs.^x(5)))/1000).^2) + ...
      sum((s_data{subj_idx}.unimodal.bound_vis-...
           x(4)./sqrt(1+x(3)*s_data{subj_idx}.cohs.^x(5))).^2);
    x = fmincon(vis_err, ...
        [s_data{subj_idx}.unimodal_fit1.x s_data{subj_idx}.unimodal_fit1.x(2)], ...
        [], [], [], [], [1 0 0 0.001 0], [10000 100 1000 1000 100], [], opt);
    s_data{subj_idx}.unimodal_fit2 = struct('x',x,...
        'k_vis', x(1)*plot_cohs.^x(2)./sqrt(1+x(3)*plot_cohs.^x(5)),...
        'bound_vis', x(4)./sqrt(1+x(3)*plot_cohs.^x(5)));
    
    % optim fits 1
    % fitted functions are
    % k_vis(c) = a_vis^gam_vis / sqrt(1+b_vis c^gam_vis)
    % bound_vis(c) = g_vis / sqrt(1+b_vis c^gam_vis)
    % bound_comb(c) = g_comb / sqrt(1+b_comb c^gam_comb)
    vis_err = @(x) ...   % x = [a_vis gam_vis b_vis g_vis]
      sum(((s_data{subj_idx}.optim.k_vis-...
            x(1)*s_data{subj_idx}.cohs.^x(2)./...
            sqrt(1+x(3)*s_data{subj_idx}.cohs.^x(2)))/1000).^2) + ...
      sum((s_data{subj_idx}.optim.bound_vis-...
           x(4)./sqrt(1+x(3)*s_data{subj_idx}.cohs.^x(2))).^2);
    comb_err = @(x) ...  % x = [g_comb b_comb gam_comb]
        sum((s_data{subj_idx}.optim.bound_comb-...
             x(1)./sqrt(1+x(2)*s_data{subj_idx}.cohs.^x(3))).^2);
    x_vis = fmincon(vis_err, [750 2 1 0.25], [], [], [], [], ...
        [1 0 0 0.001], [10000 10 50 10], [], opt);
    x_comb = fmincon(comb_err, [0.25 100 4], [], [], [], [], ...
        [0.001 0 0], [10 200 10], [], opt);
    s_data{subj_idx}.optim_fit1 = struct('x_vis',x_vis,'x_comb',x_comb,...
        'k_vis', x_vis(1)*plot_cohs.^x_vis(2)./sqrt(1+x_vis(3)*plot_cohs.^x_vis(2)),...
        'bound_vis', x_vis(4)./sqrt(1+x_vis(3)*plot_cohs.^x_vis(2)), ...
        'k_comb', sqrt((x_vis(1)*plot_cohs.^x_vis(2)./...
        sqrt(1+x_vis(3)*plot_cohs.^x_vis(2))).^2+s_data{subj_idx}.optim.k_vest^2),...
        'bound_comb', x_comb(1)./sqrt(1+x_comb(2)*plot_cohs.^x_comb(3)));
        
    % optim fits 2
    % fitted functions are
    % k_vis(c) = a_vis^gam1_vis / sqrt(1+b_vis c^gam2_vis)
    % bound_vis(c) = g_vis / sqrt(1+b_vis c^gam2_vis)
    % bound_comb(c) = g_comb / sqrt(1+b_comb c^gam_comb)
    vis_err = @(x) ...   % x = [a_vis gam1_vis b_vis g_vis gam2_vis]
      sum(((s_data{subj_idx}.optim.k_vis-...
            x(1)*s_data{subj_idx}.cohs.^x(2)./...
            sqrt(1+x(3)*s_data{subj_idx}.cohs.^x(5)))/1000).^2) + ...
      sum((s_data{subj_idx}.optim.bound_vis-...
           x(4)./sqrt(1+x(3)*s_data{subj_idx}.cohs.^x(5))).^2);
    comb_err = @(x) ...  % x = [g_comb b_comb gam_comb]
        sum((s_data{subj_idx}.optim.bound_comb-...
             x(1)./sqrt(1+x(2)*s_data{subj_idx}.cohs.^x(3))).^2);
    x_vis = fmincon(vis_err, ...
        [s_data{subj_idx}.optim_fit1.x_vis s_data{subj_idx}.optim_fit1.x_vis(2)], ...
        [], [], [], [], [1 0 0 0.001 0], [10000 10 50 10 10], [], opt);
    x_comb = fmincon(comb_err, s_data{subj_idx}.optim_fit1.x_comb, ...
        [], [], [], [], [0.001 0 0], [10 200 10], [], opt);
    s_data{subj_idx}.optim_fit2 = struct('x_vis',x_vis,'x_comb',x_comb,...
        'k_vis', x_vis(1)*plot_cohs.^x_vis(2)./sqrt(1+x_vis(3)*plot_cohs.^x_vis(5)),...
        'bound_vis', x_vis(4)./sqrt(1+x_vis(3)*plot_cohs.^x_vis(5)), ...
        'k_comb', sqrt((x_vis(1)*plot_cohs.^x_vis(2)./...
        sqrt(1+x_vis(3)*plot_cohs.^x_vis(5))).^2+s_data{subj_idx}.optim.k_vest^2),...
        'bound_comb', x_comb(1)./sqrt(1+x_comb(2)*plot_cohs.^x_comb(3)));
end
fprintf('\n\n');


%% output fitted parameters
fprintf('optim fits, model 1\n');
fprintf('k_vis(c) = a_vis c^gam_vis / sqrt(1 + b_vis c^gam_vis)\n');
fprintf('bound_vis(c) = g_vis / sqrt(1 + b_vis c^gam_vis)\n');
fprintf('bound_comb(c) = g_comb / sqrt(1 + b_comb c^gam_comb)\n\n');
fprintf('              a_vis   gam_vis     b_vis     g_vis    g_comb    b_comb  gam_comb\n');
for subj_idx = 1:subj_num
    x_vis = s_data{subj_idx}.optim_fit1.x_vis;
    x_comb = s_data{subj_idx}.optim_fit1.x_comb;
    fprintf('%9s %9.3f %9.3f %9.3f %9.3f %9.3f %9.3f %9.3f\n', subj_ids{subj_idx}, ...
        x_vis(1), x_vis(2), x_vis(3), x_vis(4), x_comb(1), x_comb(2), x_comb(3));
end
fprintf('\noptim fits, model 2\n');
fprintf('k_vis(c) = a_vis c^gam1_vis / sqrt(1 + b_vis c^gam2_vis)\n');
fprintf('bound_vis(c) = g_vis / sqrt(1 + b_vis c^gam2_vis)\n');
fprintf('bound_comb(c) = g_comb / sqrt(1 + b_comb c^gam_comb)\n\n');
fprintf('              a_vis  gam1_vis  gam2_vis     b_vis     g_vis    g_comb    b_comb  gam_comb\n');
for subj_idx = 1:subj_num
    x_vis = s_data{subj_idx}.optim_fit2.x_vis;
    x_comb = s_data{subj_idx}.optim_fit2.x_comb;
    fprintf('%9s %9.3f %9.3f %9.3f %9.3f %9.3f %9.3f %9.3f %9.3f\n', subj_ids{subj_idx}, ...
        x_vis(1), x_vis(2), x_vis(5), x_vis(3), x_vis(4), x_comb(1), x_comb(2), x_comb(3));
end



%% plot unimodal fit data
figure;
subplot(1,2,1); hold on;
for subj_idx = 1:subj_num
    plot(plot_cohs,s_data{subj_idx}.unimodal_fit1.k_vis,...
        '-','Color',subj_colors(subj_idx,:),'LineWidth',1);
end
for subj_idx = 1:subj_num
    plot(plot_cohs,s_data{subj_idx}.unimodal_fit2.k_vis,...
        '-.','Color',subj_colors(subj_idx,:),'LineWidth',1);
end
for subj_idx = 1:subj_num
    errorbar(s_data{subj_idx}.cohs, ...
        s_data{subj_idx}.unimodal.k_vis, s_data{subj_idx}.unimodal.k_vis_sd, ...
        'o--', 'LineWidth', 1, 'MarkerSize', 6, 'MarkerFaceColor', [1 1 1], ...
        'Color', subj_colors(subj_idx,:));
end
ylabel('k_{vis}');  xlim(coh_lims);  ylim(kvis_lims);
legend(subj_ids,'Location','NorthWest');
subplot(1,2,2);  hold on;
for subj_idx = 1:subj_num
    plot(plot_cohs,s_data{subj_idx}.unimodal_fit1.bound_vis,...
        '-','Color',subj_colors(subj_idx,:),'LineWidth',1);
end
for subj_idx = 1:subj_num
    plot(plot_cohs,s_data{subj_idx}.unimodal_fit2.bound_vis,...
        '-.','Color',subj_colors(subj_idx,:),'LineWidth',1);
end
for subj_idx = 1:subj_num
    errorbar(s_data{subj_idx}.cohs, ...
        s_data{subj_idx}.unimodal.bound_vis, s_data{subj_idx}.unimodal.bound_vis_sd, ...
        'o--', 'LineWidth', 1, 'MarkerSize', 6, 'MarkerFaceColor', [1 1 1], ...
        'Color', subj_colors(subj_idx,:));
end
ylabel('\theta_{vis}');  xlim(coh_lims);  ylim(boundvis_lims);


%% plot optim fit data, and model fits from script
figure;
% kvis
subplot(2,2,1);  hold on;
for subj_idx = 1:subj_num
    plot(plot_cohs,s_data{subj_idx}.optim_fit1.k_vis,...
        '-','Color',subj_colors(subj_idx,:),'LineWidth',1);
end
for subj_idx = 1:subj_num
    plot(plot_cohs,s_data{subj_idx}.optim_fit2.k_vis,...
        '-.','Color',subj_colors(subj_idx,:),'LineWidth',1);
end
for subj_idx = 1:subj_num
    errorbar(s_data{subj_idx}.cohs, ...
        s_data{subj_idx}.optim.k_vis, s_data{subj_idx}.optim.k_vis_sd, ...
        'o--','LineWidth',1,'MarkerSize',6,'MarkerFaceColor',[1 1 1],...
        'Color',subj_colors(subj_idx,:));
end
ylabel('k_{vis}');  xlim(coh_lims);  ylim(kvis_lims);
legend(subj_ids,'Location','NorthWest');
% boundvis
subplot(2,2,2);  hold on;
for subj_idx = 1:subj_num
    plot(plot_cohs,s_data{subj_idx}.optim_fit1.bound_vis,...
        '-','Color',subj_colors(subj_idx,:),'LineWidth',1);
end
for subj_idx = 1:subj_num
    plot(plot_cohs,s_data{subj_idx}.optim_fit2.bound_vis,...
        '-.','Color',subj_colors(subj_idx,:),'LineWidth',1);
end
for subj_idx = 1:subj_num
    errorbar(s_data{subj_idx}.cohs, ...
        s_data{subj_idx}.optim.bound_vis, s_data{subj_idx}.optim.bound_vis_sd, ...
        'o--','LineWidth',1,'MarkerSize',6,'MarkerFaceColor',[1 1 1],...
        'Color',subj_colors(subj_idx,:));
end
ylabel('\theta_{vis}');  xlim(coh_lims);  ylim(boundvis_lims);
% kcomb
subplot(2,2,3);  hold on;
for subj_idx = 1:subj_num
    plot(plot_cohs,s_data{subj_idx}.optim_fit1.k_comb,...
        '-','Color',subj_colors(subj_idx,:),'LineWidth',1);
end
for subj_idx = 1:subj_num
    plot(plot_cohs,s_data{subj_idx}.optim_fit2.k_comb,...
        '-.','Color',subj_colors(subj_idx,:),'LineWidth',1);
end
for subj_idx = 1:subj_num
    errorbar(s_data{subj_idx}.cohs, ...
        s_data{subj_idx}.optim.k_comb, s_data{subj_idx}.optim.k_comb_sd, ...
        'o--','LineWidth',1,'MarkerSize',6,'MarkerFaceColor',[1 1 1],...
        'Color',subj_colors(subj_idx,:));
end
ylabel('k_{comb}');  xlim(coh_lims);  ylim(kcomb_lims);
% boundcomb
subplot(2,2,4);  hold on;
for subj_idx = 1:subj_num
    plot(plot_cohs,s_data{subj_idx}.optim_fit1.bound_comb,...
        '-','Color',subj_colors(subj_idx,:),'LineWidth',1);
end
for subj_idx = 1:subj_num
    plot(plot_cohs,s_data{subj_idx}.optim_fit2.bound_comb,...
        '-.','Color',subj_colors(subj_idx,:),'LineWidth',1);
end
for subj_idx = 1:subj_num
    errorbar(s_data{subj_idx}.cohs, ...
        s_data{subj_idx}.optim.bound_comb, s_data{subj_idx}.optim.bound_comb_sd, ...
        'o--','LineWidth',1,'MarkerSize',6,'MarkerFaceColor',[1 1 1],...
        'Color',subj_colors(subj_idx,:));
end
ylabel('\theta_{comb}');  xlim(coh_lims);  ylim(boundcomb_lims);


%% plot optim fits, data only
figure;
% kvis
subplot(2,2,1);  hold on;
for subj_idx = 1:subj_num
    errorbar(s_data{subj_idx}.cohs, ...
        s_data{subj_idx}.optim.k_vis, s_data{subj_idx}.optim.k_vis_sd, ...
        'o-','LineWidth',1,'MarkerSize',6,'MarkerFaceColor',[1 1 1],...
        'Color',subj_colors(subj_idx,:));
end
ylabel('k_{vis}');  xlim(coh_lims);  ylim(kvis_lims);
legend(subj_ids,'Location','NorthWest');
% boundvis
subplot(2,2,2);  hold on;
for subj_idx = 1:subj_num
    errorbar(s_data{subj_idx}.cohs, ...
        s_data{subj_idx}.optim.bound_vis, s_data{subj_idx}.optim.bound_vis_sd, ...
        'o-','LineWidth',1,'MarkerSize',6,'MarkerFaceColor',[1 1 1],...
        'Color',subj_colors(subj_idx,:));
end
ylabel('\theta_{vis}');  xlim(coh_lims);  ylim(boundvis_lims);
% kcomb
subplot(2,2,3);  hold on;
for subj_idx = 1:subj_num
    errorbar(s_data{subj_idx}.cohs, ...
        s_data{subj_idx}.optim.k_comb, s_data{subj_idx}.optim.k_comb_sd, ...
        'o-','LineWidth',1,'MarkerSize',6,'MarkerFaceColor',[1 1 1],...
        'Color',subj_colors(subj_idx,:));
end
ylabel('k_{comb}');  xlim(coh_lims);  ylim(kcomb_lims);
% boundcomb
subplot(2,2,4);  hold on;
for subj_idx = 1:subj_num
    errorbar(s_data{subj_idx}.cohs, ...
        s_data{subj_idx}.optim.bound_comb, s_data{subj_idx}.optim.bound_comb_sd, ...
        'o-','LineWidth',1,'MarkerSize',6,'MarkerFaceColor',[1 1 1],...
        'Color',subj_colors(subj_idx,:));
end
ylabel('\theta_{comb}');  xlim(coh_lims);  ylim(boundcomb_lims);


%% plot optim fits & powcomb, powsep
pbar = 4/3;
% kvis
figure('Color','white');  hold on;
xlim(coh_lims);  ylim(kvis_lims);
%subplot(2,2,1);  hold on;
for subj_idx = 1:subj_num
    plot(plot_cohs,s_data{subj_idx}.optim_powcomb.k_vis,...
        '-','Color',subj_colors(subj_idx,:),'LineWidth',1);
end
for subj_idx = 1:subj_num
    plot(plot_cohs,s_data{subj_idx}.optim_powsep.k_vis,...
        '--','Color',subj_colors(subj_idx,:),'LineWidth',1);
end
for subj_idx = 1:subj_num
    for c_idx = 1:length(s_data{subj_idx}.cohs)
        plot(s_data{subj_idx}.cohs(c_idx)*[1 1],...
            s_data{subj_idx}.optim.k_vis(c_idx)+...
            s_data{subj_idx}.optim.k_vis_sd(c_idx)*[-1 1],...
            '-','Color',subj_colors(subj_idx,:));
    end
end
for subj_idx = 1:subj_num
    plot(s_data{subj_idx}.cohs,s_data{subj_idx}.optim.k_vis,'o',...
        'MarkerSize',4,'MarkerFaceColor',[1 1 1],'Color',subj_colors(subj_idx,:));
end
ylabel('k_{vis}');
legend(subj_ids,'Location','NorthWest');
set(gca,'Layer','top','Box','off','PlotBoxAspectRatio',[pbar,1,1],...
    'TickDir','out','TickLength',[1,1]*0.02/max(pbar,1),...
    'XTick',coh_ticks,'XTickLabel',coh_ticklabels);
% boundvis
%subplot(2,2,2);  hold on;
figure('Color','white');  hold on;
xlim(coh_lims);  ylim(boundvis_lims);
for subj_idx = 1:subj_num
    plot(plot_cohs,s_data{subj_idx}.optim_powcomb.bound_vis,...
        '-','Color',subj_colors(subj_idx,:),'LineWidth',1);
end
for subj_idx = 1:subj_num
    plot(plot_cohs,s_data{subj_idx}.optim_powsep.bound_vis,...
        '--','Color',subj_colors(subj_idx,:),'LineWidth',1);
end
for subj_idx = 1:subj_num
    for c_idx = 1:length(s_data{subj_idx}.cohs)
        plot(s_data{subj_idx}.cohs(c_idx)*[1 1],...
            s_data{subj_idx}.optim.bound_vis(c_idx)+...
            s_data{subj_idx}.optim.bound_vis_sd(c_idx)*[-1 1],...
            '-','Color',subj_colors(subj_idx,:));
    end
end
for subj_idx = 1:subj_num
    plot(s_data{subj_idx}.cohs, s_data{subj_idx}.optim.bound_vis, ...
        'o','MarkerSize',4,'MarkerFaceColor',[1 1 1],'Color',subj_colors(subj_idx,:));
end
ylabel('\theta_{vis}');
set(gca,'Layer','top','Box','off','PlotBoxAspectRatio',[pbar,1,1],...
    'TickDir','out','TickLength',[1,1]*0.02/max(pbar,1),...
    'XTick',coh_ticks,'XTickLabel',coh_ticklabels);
% kcomb
%subplot(2,2,3);  hold on;
figure('Color','white');  hold on;
xlim(coh_lims);  ylim(kcomb_lims);
for subj_idx = 1:subj_num
    plot(plot_cohs,s_data{subj_idx}.optim_powcomb.k_comb,...
        '-','Color',subj_colors(subj_idx,:),'LineWidth',1);
end
for subj_idx = 1:subj_num
    plot(plot_cohs,s_data{subj_idx}.optim_powsep.k_comb,...
        '--','Color',subj_colors(subj_idx,:),'LineWidth',1);
end
for subj_idx = 1:subj_num
    for c_idx = 1:length(s_data{subj_idx}.cohs)
        plot(s_data{subj_idx}.cohs(c_idx)*[1 1],...
            s_data{subj_idx}.optim.k_comb(c_idx)+...
            s_data{subj_idx}.optim.k_comb_sd(c_idx)*[-1 1],...
            '-','Color',subj_colors(subj_idx,:));
    end
end
for subj_idx = 1:subj_num
    plot(s_data{subj_idx}.cohs, s_data{subj_idx}.optim.k_comb, ...
        'o','MarkerSize',4,'MarkerFaceColor',[1 1 1],'Color',subj_colors(subj_idx,:));
end
ylabel('k_{comb}');
set(gca,'Layer','top','Box','off','PlotBoxAspectRatio',[pbar,1,1],...
    'TickDir','out','TickLength',[1,1]*0.02/max(pbar,1),...
    'XTick',coh_ticks,'XTickLabel',coh_ticklabels);
% boundcomb
%subplot(2,2,4);  hold on;
figure('Color','white');  hold on;
xlim(coh_lims);  ylim(boundcomb_lims);
for subj_idx = 1:subj_num
    plot(plot_cohs,s_data{subj_idx}.optim_powcomb.bound_comb,...
        '-','Color',subj_colors(subj_idx,:),'LineWidth',1);
end
for subj_idx = 1:subj_num
    plot(plot_cohs,s_data{subj_idx}.optim_powsep.bound_comb,...
        '--','Color',subj_colors(subj_idx,:),'LineWidth',1);
end
for subj_idx = 1:subj_num
    for c_idx = 1:length(s_data{subj_idx}.cohs)
        plot(s_data{subj_idx}.cohs(c_idx)*[1 1],...
            s_data{subj_idx}.optim.bound_comb(c_idx)+...
            s_data{subj_idx}.optim.bound_comb_sd(c_idx)*[-1 1],...
            '-','Color',subj_colors(subj_idx,:));
    end
end
for subj_idx = 1:subj_num
    plot(s_data{subj_idx}.cohs, s_data{subj_idx}.optim.bound_comb, ...
        'o','MarkerSize',4,'MarkerFaceColor',[1 1 1],'Color',subj_colors(subj_idx,:));
end
ylabel('\theta_{comb}');
set(gca,'Layer','top','Box','off','PlotBoxAspectRatio',[pbar,1,1],...
    'TickDir','out','TickLength',[1,1]*0.02/max(pbar,1),...
    'XTick',coh_ticks,'XTickLabel',coh_ticklabels);


%% plot optim vs sepk
figure;
% kvis
subplot(2,2,1);  hold on;
for subj_idx = 1:subj_num
    errorshade(s_data{subj_idx}.cohs, ...
        s_data{subj_idx}.optim.k_vis+s_data{subj_idx}.optim.k_vis_sd, ...
        s_data{subj_idx}.optim.k_vis-s_data{subj_idx}.optim.k_vis_sd, ...
        subj_colors(subj_idx,:));
end
for subj_idx = 1:subj_num
    plot(s_data{subj_idx}.cohs, s_data{subj_idx}.optim.k_vis, ...
        'Color',subj_colors(subj_idx,:),'LineWidth',1);
end
for subj_idx = 1:subj_num
    errorbar(s_data{subj_idx}.cohs,...
        s_data{subj_idx}.sepk.k_vis,s_data{subj_idx}.sepk.k_vis_sd,...
        'o','Color',subj_colors(subj_idx,:),'MarkerSize',6,'MarkerFaceColor',[1 1 1]);
end
ylabel('k_{vis}');  xlim(coh_lims);  ylim(kvis_lims);
legend(subj_ids,'Location','NorthWest');
% boundvis
subplot(2,2,2);  hold on;
for subj_idx = 1:subj_num
    errorshade(s_data{subj_idx}.cohs, ...
        s_data{subj_idx}.optim.bound_vis+s_data{subj_idx}.optim.bound_vis_sd, ...
        s_data{subj_idx}.optim.bound_vis-s_data{subj_idx}.optim.bound_vis_sd, ...
        subj_colors(subj_idx,:));
end
for subj_idx = 1:subj_num
    plot(s_data{subj_idx}.cohs, s_data{subj_idx}.optim.bound_vis, ...
        'Color',subj_colors(subj_idx,:),'LineWidth',1);
end
for subj_idx = 1:subj_num
    errorbar(s_data{subj_idx}.cohs,...
        s_data{subj_idx}.sepk.bound_vis,s_data{subj_idx}.sepk.bound_vis_sd,...
        'o','Color',subj_colors(subj_idx,:),'MarkerSize',6,'MarkerFaceColor',[1 1 1]);
end
ylabel('\theta_{vis}');  xlim(coh_lims);  ylim(boundvis_lims);
% kcomb
subplot(2,2,3);  hold on;
for subj_idx = 1:subj_num
    errorshade(s_data{subj_idx}.cohs, ...
        s_data{subj_idx}.optim.k_comb+s_data{subj_idx}.optim.k_vis_sd, ...
        s_data{subj_idx}.optim.k_comb-s_data{subj_idx}.optim.k_comb_sd, ...
        subj_colors(subj_idx,:));
end
for subj_idx = 1:subj_num
    plot(s_data{subj_idx}.cohs, s_data{subj_idx}.optim.k_comb, ...
        'Color',subj_colors(subj_idx,:),'LineWidth',1);
end
for subj_idx = 1:subj_num
    errorbar(s_data{subj_idx}.cohs,...
        s_data{subj_idx}.sepk.k_comb,s_data{subj_idx}.sepk.k_comb_sd,...
        'o','Color',subj_colors(subj_idx,:),'MarkerSize',6,'MarkerFaceColor',[1 1 1]);
end
ylabel('k_{comb}');  xlim(coh_lims);  ylim(kcomb_lims);
% boundcomb
subplot(2,2,4);  hold on;
for subj_idx = 1:subj_num
    errorshade(s_data{subj_idx}.cohs, ...
        s_data{subj_idx}.optim.bound_comb+s_data{subj_idx}.optim.bound_vis_sd, ...
        s_data{subj_idx}.optim.bound_comb-s_data{subj_idx}.optim.bound_comb_sd, ...
        subj_colors(subj_idx,:));
end
for subj_idx = 1:subj_num
    plot(s_data{subj_idx}.cohs, s_data{subj_idx}.optim.bound_comb, ...
        'Color',subj_colors(subj_idx,:),'LineWidth',1);
end
for subj_idx = 1:subj_num
    errorbar(s_data{subj_idx}.cohs,...
        s_data{subj_idx}.sepk.bound_comb,s_data{subj_idx}.sepk.bound_comb_sd,...
        'o','Color',subj_colors(subj_idx,:),'MarkerSize',6,'MarkerFaceColor',[1 1 1]);
end
ylabel('\theta_{comb}');  xlim(coh_lims);  ylim(boundcomb_lims);
